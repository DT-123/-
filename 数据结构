一、绪论
  1、数据元素的存储结构方式：顺序存储结构、链式存储结构
   顺序存储：把数据元素存放在地址连续的单元里，其数据间的逻辑关系和物理关系是一致的。  比如：数组。
   链式存储：把数据元素存放在任意的存储单元里，这组存储单元可以是连续的也可以是不连续的。
            这就说明链式存储结构的数据元素存储关系并不能反映其逻辑关系，因此需要用一个指针存放数据元素的地址，通过地址可找到相关联数据元素的位置。 
  2、数据元素是数据的基本单位。一个数据元素可由若干个数据项组成，数据项是数据的不可分割的最小单位。
  3、数据对象是性质相同的数据元素的集合。
  4、数据结构是相互之间存在一种或多种特定关系的数据元素的集合。                                                                               
二、算法
  1、算法的五个特点：有穷性、确定性、可行性、输入、输出。
  2、算法优劣度量：时间复杂度、空间复杂度。
      O（n）  一阶n  二阶n*n  ...
三、线性表
1、线性表：是n个数据元素构成的有限序列。
   eg：（1 2 3 4 5 6...n）  
   前驱元素：2为3的前驱元素；3为2的后继元素。
   线性表元素的个数定义为线性表的长度，n=0时为空表。
2、线性表由第一个元素记为1，不像 数组 首元素是tmp[0]。
3、线性表的顺序表示：用一组地址连续的存储单元依次存储线性表的数据元素。
4、线性表顺序存储结构的优缺点：线性表的顺序存储结构在存、读数据时，不管是哪个位置，时间复杂度都是O（1）。
                            而在插入或删除时，时间复杂度都是O（n）。 
      这就说明它比较适合元素个数比较稳定，不经常插入和删除元素，更多的是存取数据操作。
5、线性表的链式存储结构：用一组任意的存储单元存储线性表的数据元素，此存储单元不仅要存储数据元素信息，还要存储它的
                       后继元素的存储地址（指针）。
                       数据域：存储数据元素信息的域。
                       指针域：存储直接后继位置的域。
                       指针域中存储的信息成为指针或链。
                       指针域+数据域，组成数据元素的存储映像，称为结点。
                       链表有限长度，有头有尾，链表中第一个结点的存储位置叫做头指针，最后一个结点指针为空。
6、头指针：指链表指向第一个结点的指针，若链表有头结点，则是指向头结点的指针。
          头指针具有标识作用，常用头指针冠以链表的名字。
          无论链表是否为空，头指针均不为空。
          头指针是链表的必要元素。
7、头结点：头结点是为了操作的统一和方便设立的，防灾第一个元素的节点之前，其数据域一般无意义。
          有了头结点，对在第一元素结点前插入结点和删除第一结点的操作与对其他结点的操作就统一了。
          头结点不一定是链表的必须要素。
8、用C语言的结构指针描述单链表：
          typedef struct Node
          {
            ElemType data;    //数据域
            struct Node *Next;  //指针域
          }Node；
          typedef struct Node *LinkList；
9、单链表的读取：从头开始找，直到第i个元素为止。
               算法的时间复杂度取决于i的位置。当i=1时，不需要遍历，当i=n时需要遍历n-1次，复杂度为O（n）
               单链表的结构中没有定义表长，所以不知道要循环多少次，不可用for循环。
               核心思想：工作指针后移。

          
          

          
          
          
          
          
          
          
          
